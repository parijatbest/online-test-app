{"version":3,"sources":["components/QuestionView/NavBar/NavBar.js","components/QuestionView/QuestionNavigation/QuestionNavigation.js","components/QuestionView/QBadge/QBadge.js","components/QuestionView/QuestionMap/QuestionMap.js","components/QuestionView/Options/Options.js","components/QuestionView/Question/Question.js","components/QuestionView/QuestionView.js","components/LeftPanel/LeftPanel.js","components/LoginStatus/LoginStatus.js","components/ModalUI/ModalUI.js","components/Counter/Counter.js","components/RightPanel/RightPanel.js","data/SampleData.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","activeTab","this","props","react_default","a","createElement","Nav","variant","Item","Link","eventKey","className","onSelect","href","Component","QuestionNavigation","_this$props","setCurQuesNo","curQuesNo","totalQues","qID","Button","onClick","disabled","QBadge","activeTabData","answerStatus","questions","map","qObj","ind","badgeClass","key","index","answered","checkBadge","data-qno","id","concat","e","curInd","preventDefault","parseInt","target","getAttribute","onBadgeClick","QuestionMap","QuestionView_QBadge_QBadge","Options","ansOptions","onRadioClick","Form","optObj","Check","custom","type","name","aID","label","aDesc","value","onChange","checked","Question","data","handleAnswerStatus","qNo","_this$props2","length","qDesc","QuestionView_Options_Options","QuestionView_QuestionNavigation_QuestionNavigation","QuestionView_QuestionMap_QuestionMap","QuestionView","handleTabclick","handleRadioClick","QuestionView_NavBar_NavBar","QuestionView_Question_Question","LeftPanel","onSubmitClick","LoginStatus","ModalUI","Modal","show","Header","closeButton","Title","Body","Footer","handleClose","Counter","state","showModal","onHandleTick","timeLeftObj","localStorage","setItem","total","_this","setState","handleSubmit","_this2","timeLeftMs","localStorageData","getItem","index_es","date","Date","now","renderer","_ref","hours","minutes","seconds","completed","components_ModalUI_ModalUI","onTick","RightPanel","Fragment","components_LoginStatus_LoginStatus","timeUp","components_Counter_Counter","TestData","logical","aptitude","reasoning","Layout","prevState","obj","Object","objectSpread","payload","console","log","result","window","confirm","removeItem","componentDidMount","JSON","parse","stringify","Container","Row","Col","lg","components_LeftPanel_LeftPanel","components_RightPanel_RightPanel","components_QuestionView_QuestionView","App","components_Layout_Layout","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.962ee0d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const activeTab = this.props.activeTab;\r\n        return (\r\n            // <Nav variant=\"pills\" defaultActiveKey={this.props.activeTab}>\r\n            <Nav variant=\"pills\">\r\n                <Nav.Item>\r\n                    <Nav.Link\r\n                        eventKey=\"logical\"\r\n                        className={activeTab === \"logical\" ? \"active\" : \"\"}\r\n                        onSelect={this.props.onSelect}>LOGICAL SECTION</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link\r\n                        eventKey=\"aptitude\"\r\n                        className={activeTab === \"aptitude\" ? \"active\" : \"\"}\r\n                        onSelect={this.props.onSelect}>APTITUDE SECTION</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link\r\n                        eventKey=\"reasoning\"\r\n                        className={activeTab === \"reasoning\" ? \"active\" : \"\"}\r\n                        onSelect={this.props.onSelect}>REASONING SECTION</Nav.Link>\r\n                </Nav.Item>\r\n                <a href=\"javasript:void(0);\" className=\"help-text\">Need Help?</a>\r\n            </Nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass QuestionNavigation extends Component {\r\n    render() {\r\n        const {setCurQuesNo, curQuesNo, totalQues, qID} = this.props;\r\n        return (\r\n            <div className=\"question-nav\">\r\n                <Button \r\n                    variant=\"primary\" \r\n                    className=\"prev-question\"\r\n                    onClick={() => setCurQuesNo(curQuesNo - 1, qID)}\r\n                    disabled={curQuesNo === 1}>Previous Question</Button>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    className=\"next-question\" \r\n                    onClick={() => setCurQuesNo(curQuesNo+1, qID)}\r\n                    disabled={curQuesNo === totalQues}>Next Question</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionNavigation;","import React, { Component } from 'react';\r\n\r\nclass QBadge extends Component {\r\n    render() {\r\n        const { activeTabData, setCurQuesNo, answerStatus, curQuesNo } = this.props;\r\n        const onBadgeClick = (e, curInd) => {\r\n            e.preventDefault();\r\n            if(curInd !== curQuesNo) {\r\n                setCurQuesNo(parseInt(e.target.getAttribute(\"data-qno\")), e.target.id);\r\n            }\r\n        }\r\n        const checkBadge = (key, index) => {\r\n            let badgeClass = \"\";\r\n            if(answerStatus && answerStatus[key]) {\r\n                badgeClass = \"badge-unanswered\";\r\n                if(answerStatus[key].answered) {\r\n                    badgeClass = \"badge-answered\";\r\n                }\r\n            }\r\n            if(curQuesNo === index + 1) {\r\n                badgeClass += \" badge-current\";\r\n            }\r\n            return badgeClass;\r\n        }\r\n        const qBadges = activeTabData.questions.map((qObj, ind) => {\r\n            const badgeClass = checkBadge(qObj.qID, ind);\r\n            return <button\r\n                data-qno={ind + 1}\r\n                id={qObj.qID}\r\n                className={`badge badge-pill ${badgeClass}`}\r\n                onClick={(e) => onBadgeClick(e, ind + 1)}\r\n                key={qObj.qID}>\r\n                {ind + 1}\r\n            </button>\r\n        })\r\n    \r\n        return qBadges;\r\n    }\r\n}\r\nexport default QBadge;","import React, { Component } from 'react';\r\nimport QBadge from './../QBadge/QBadge';\r\n\r\nclass QuestionMap extends Component {\r\n    render() {\r\n        const { setCurQuesNo, curQuesNo, activeTab, activeTabData, answerStatus } = this.props;\r\n\r\n        return (\r\n            <div className=\"question-map\">\r\n                <h3 className=\"qmap-heading\">Questions in {activeTab} section</h3>\r\n                <div className=\"qmap-badge\">\r\n                    <QBadge\r\n                        answerStatus={answerStatus}\r\n                        activeTabData={activeTabData}\r\n                        curQuesNo={curQuesNo}\r\n                        setCurQuesNo={setCurQuesNo} />\r\n                </div>\r\n                <div className=\"qmap-legend\">\r\n                    <div className=\"legend answered\">Answered</div>\r\n                    <div className=\"legend unanswered\">Unanswered</div>\r\n                    <div className=\"legend current\">Current question</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionMap;","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass Options extends Component {\r\n    render() {\r\n        const {ansOptions, qID, onRadioClick, answerStatus} = this.props;\r\n        let answered = null;\r\n        if(answerStatus[qID] && answerStatus[qID].answered) {\r\n            answered=answerStatus[qID].answered;\r\n        }\r\n        return (\r\n            <Form>\r\n                {ansOptions.map((optObj) => {\r\n                    return (<Form.Check\r\n                        custom\r\n                        type=\"radio\"\r\n                        name={qID}\r\n                        id={optObj.aID}\r\n                        key={optObj.aID}\r\n                        label={optObj.aDesc}\r\n                        value={optObj.aID}\r\n                        onChange={onRadioClick}\r\n                        checked={(answered === optObj.aID) ? true : false}\r\n                    />)\r\n                })}\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;","import React, { Component } from 'react';\r\nimport QuestionNavigation from '../QuestionNavigation/QuestionNavigation';\r\nimport QuestionMap from './../QuestionMap/QuestionMap';\r\nimport Options from './../Options/Options';\r\n\r\nclass Question extends Component {\r\n    componentDidMount() {\r\n        const { activeTab, data, curQuesNo, handleAnswerStatus } = this.props;\r\n        const qNo = curQuesNo[activeTab];\r\n        const qId = data[activeTab].questions[qNo - 1].qID;\r\n        handleAnswerStatus(qId);\r\n    }\r\n    render() {\r\n        const { activeTab, data, setCurQuesNo, curQuesNo, answerStatus, onRadioClick } = this.props;\r\n        const qNo = curQuesNo[activeTab];\r\n        const totalQues = data[activeTab].questions.length;\r\n        return (\r\n            <div className=\"question\">\r\n                <h2 className=\"question-heading\">Question {qNo}</h2>\r\n                <div className=\"question-box\">\r\n                    <div className=\"question-desc\">\r\n                        {data[activeTab].questions[qNo - 1].qDesc}\r\n                    </div>\r\n                    <div className=\"question-opt\">\r\n                        <Options\r\n                            answerStatus={answerStatus}\r\n                            onRadioClick={onRadioClick}\r\n                            qID={data[activeTab].questions[qNo - 1].qID}\r\n                            ansOptions={data[activeTab].questions[qNo - 1].ansOptions} />\r\n                    </div>\r\n                    <QuestionNavigation\r\n                        qID={data[activeTab].questions[qNo - 1].qID}\r\n                        totalQues={totalQues}\r\n                        curQuesNo={qNo}\r\n                        setCurQuesNo={setCurQuesNo} />\r\n                </div>\r\n                <QuestionMap\r\n                    answerStatus={answerStatus}\r\n                    activeTabData={data[activeTab]}\r\n                    activeTab={activeTab}\r\n                    totalQues={totalQues}\r\n                    curQuesNo={qNo}\r\n                    setCurQuesNo={setCurQuesNo} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport NavBar from './NavBar/NavBar';\r\nimport Question from './Question/Question';\r\n\r\nclass QuestionView extends Component {\r\n    render() {\r\n        const { handleTabclick, setCurQuesNo, handleRadioClick,\r\n            handleAnswerStatus, activeTab,\r\n            curQuesNo, answerStatus,\r\n            data } = this.props;\r\n        return (\r\n            <div className=\"question-view\">\r\n                <NavBar\r\n                    onSelect={handleTabclick}\r\n                    activeTab={activeTab} />\r\n                <Question\r\n                    setCurQuesNo={setCurQuesNo}\r\n                    handleAnswerStatus={handleAnswerStatus}\r\n                    curQuesNo={curQuesNo}\r\n                    activeTab={activeTab}\r\n                    answerStatus={answerStatus}\r\n                    onRadioClick={handleRadioClick}\r\n                    data={data} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionView;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass LeftPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"primary\"\r\n                    className=\"submit-test\"\r\n                    onClick={this.props.onSubmitClick}>SUBMIT TEST</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftPanel;","import React, { Component } from 'react';\r\n\r\nclass LoginStatus extends Component {\r\n    render() {\r\n        const isLoggedIn = true;// Will be evaluated from login service in actual implementation\r\n        return (\r\n            !isLoggedIn ? null : (\r\n                <div className=\"login-status\">\r\n                    <p className=\"login-status-msg\">LOGGED IN AS</p>\r\n                    <p className=\"login-status-id\">10STUHHCS0011</p>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginStatus;","import React, { Component } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nclass ModalUI extends Component {\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.show}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Oops!</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <p>The time has expired. Thank you for using the application!</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.handleClose}>CLOSE</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalUI;","import React, { Component } from 'react';\r\nimport Countdown from 'react-countdown-now';\r\nimport ModalUI from './../ModalUI/ModalUI';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        showModal: true\r\n    }\r\n    onHandleTick = (timeLeftObj) => {\r\n        localStorage.setItem(\"timeLeftMs\", timeLeftObj.total);\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ showModal: false });\r\n        this.props.handleSubmit(true);\r\n    }\r\n    render() {\r\n        let timeLeftMs = 2 * 60 * 60 * 1000;\r\n        const localStorageData = parseInt(localStorage.getItem(\"timeLeftMs\"));\r\n        if (localStorageData) {\r\n            timeLeftMs = localStorageData;\r\n        }\r\n\r\n        // Renderer callback with condition\r\n        const renderer = ({ hours, minutes, seconds, completed }) => {\r\n            if (completed) {\r\n                // Render a completed state\r\n                return <ModalUI\r\n                    show={this.state.showModal}\r\n                    handleClose={this.handleClose} />;\r\n            } else {\r\n                // Render a countdown\r\n                return (\r\n                    <div className=\"counter\">\r\n                        <p className=\"counter-text\">TIME LEFT</p>\r\n                        <p className=\"counter-time\">{hours}:{minutes}:{seconds}</p>\r\n                    </div>\r\n                );\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Countdown\r\n                date={Date.now() + timeLeftMs}\r\n                // zeroPadTime={2}\r\n                renderer={renderer}\r\n                onTick={this.onHandleTick}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react';\r\nimport LoginStatus from '../LoginStatus/LoginStatus';\r\nimport Counter from '../Counter/Counter';\r\n\r\nclass RightPanel extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <LoginStatus />\r\n                {(!this.props.timeUp) ? <Counter handleSubmit={this.props.handleSubmit} /> : null }\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RightPanel;","const TestData = {\r\n    logical: {\r\n        questions: [\r\n            {\r\n                qID: \"logicalQ1\",\r\n                qDesc: \"How to answer a logical question 1 in this application?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ1Opt1\",\r\n                        aDesc: \"Sample logical Q1 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ1Opt2\",\r\n                        aDesc: \"Sample logical Q1 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ1Opt3\",\r\n                        aDesc: \"Sample logical Q1 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ1Opt4\",\r\n                        aDesc: \"Sample logical Q1 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"logicalQ2\",\r\n                qDesc: \"How to answer a logical question 2 in this application2?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ2Opt1\",\r\n                        aDesc: \"Sample logical Q2 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ2Opt2\",\r\n                        aDesc: \"Sample logical Q2 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ2Opt3\",\r\n                        aDesc: \"Sample logical Q2 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ2Opt4\",\r\n                        aDesc: \"Sample logical Q2 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"logicalQ3\",\r\n                qDesc: \"How to answer a logical question 3 in this application3?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ3Opt1\",\r\n                        aDesc: \"Sample logical Q3 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ3Opt2\",\r\n                        aDesc: \"Sample logical Q3 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ3Opt3\",\r\n                        aDesc: \"Sample logical Q3 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ3Opt4\",\r\n                        aDesc: \"Sample logical Q3 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"logicalQ4\",\r\n                qDesc: \"How to answer a logical question 4 in this application4?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ4Opt1\",\r\n                        aDesc: \"Sample logical Q4 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ4Opt2\",\r\n                        aDesc: \"Sample logical Q4 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ4Opt3\",\r\n                        aDesc: \"Sample logical Q4 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ4Opt4\",\r\n                        aDesc: \"Sample logical Q4 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"logicalQ5\",\r\n                qDesc: \"How to answer a logical question 5 in this application4?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ5Opt1\",\r\n                        aDesc: \"Sample logical Q5 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ5Opt2\",\r\n                        aDesc: \"Sample logical Q5 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ5Opt3\",\r\n                        aDesc: \"Sample logical Q5 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ5Opt5\",\r\n                        aDesc: \"Sample logical Q5 answer 4\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    aptitude: {\r\n        questions: [\r\n            {\r\n                qID: \"aptitudeQ1\",\r\n                qDesc: \"How to answer a aptitude question 1 in this application?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"aptitudeQ1Opt1\",\r\n                        aDesc: \"Sample aptitude Q1 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ1Opt2\",\r\n                        aDesc: \"Sample aptitude Q1 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ1Opt3\",\r\n                        aDesc: \"Sample aptitude Q1 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ1Opt4\",\r\n                        aDesc: \"Sample aptitude Q1 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"aptitudeQ2\",\r\n                qDesc: \"How to answer a aptitude question 2 in this application2?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"aptitudeQ2Opt1\",\r\n                        aDesc: \"Sample aptitude Q2 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ2Opt2\",\r\n                        aDesc: \"Sample aptitude Q2 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ2Opt3\",\r\n                        aDesc: \"Sample aptitude Q2 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ2Opt4\",\r\n                        aDesc: \"Sample aptitude Q2 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"aptitudeQ3\",\r\n                qDesc: \"How to answer a aptitude question 3 in this application3?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"aptitudeQ3Opt1\",\r\n                        aDesc: \"Sample aptitude Q3 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ3Opt2\",\r\n                        aDesc: \"Sample aptitude Q3 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ3Opt3\",\r\n                        aDesc: \"Sample aptitude Q3 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ3Opt4\",\r\n                        aDesc: \"Sample aptitude Q3 answer 4\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    reasoning: {\r\n        questions: [\r\n            {\r\n                qID: \"reasoniongQ1\",\r\n                qDesc: \"How to answer a reasoniong question 1 in this application?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"reasoniongQ1Opt1\",\r\n                        aDesc: \"Sample reasoniong Q1 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ1Opt2\",\r\n                        aDesc: \"Sample reasoniong Q1 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ1Opt3\",\r\n                        aDesc: \"Sample reasoniong Q1 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ1Opt4\",\r\n                        aDesc: \"Sample reasoniong Q1 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"reasoniongQ2\",\r\n                qDesc: \"How to answer a reasoniong question 2 in this application2?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"reasoniongQ2Opt1\",\r\n                        aDesc: \"Sample reasoniong Q2 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ2Opt2\",\r\n                        aDesc: \"Sample reasoniong Q2 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ2Opt3\",\r\n                        aDesc: \"Sample reasoniong Q2 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ2Opt4\",\r\n                        aDesc: \"Sample reasoniong Q2 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"reasoniongQ3\",\r\n                qDesc: \"How to answer a reasoniong question 3 in this application3?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"reasoniongQ3Opt1\",\r\n                        aDesc: \"Sample reasoniong Q3 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ3Opt2\",\r\n                        aDesc: \"Sample reasoniong Q3 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ3Opt3\",\r\n                        aDesc: \"Sample reasoniong Q3 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ3Opt4\",\r\n                        aDesc: \"Sample reasoniong Q3 answer 4\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport default TestData;","import React, { Component } from 'react';\r\nimport QuestionView from '../QuestionView/QuestionView';\r\nimport LeftPanel from './../LeftPanel/LeftPanel';\r\nimport RightPanel from './../RightPanel/RightPanel';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport TestData from '../../data/SampleData';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        data: TestData,\r\n        activeTab: \"logical\",\r\n        curQuesNo: {\r\n            logical: 1,\r\n            aptitude: 1,\r\n            reasoning: 1\r\n        },\r\n        answerStatus: {},\r\n        timeUp: false\r\n    }\r\n    handleTabclick = (eventKey) => {\r\n        if (eventKey !== this.state.activeTab) {\r\n            this.setState({ activeTab: eventKey });\r\n        }\r\n    }\r\n    setCurQuesNo = (curQuesNo, qID) => {\r\n        if (this.state.activeTab === \"logical\") {\r\n            this.setState((prevState) => {\r\n                return {\r\n                    curQuesNo: {\r\n                        logical: curQuesNo,\r\n                        aptitude: prevState.curQuesNo.aptitude,\r\n                        reasoning: prevState.curQuesNo.reasoning\r\n                    }\r\n                }\r\n            })\r\n        } else if (this.state.activeTab === \"aptitude\") {\r\n            this.setState((prevState) => {\r\n                return {\r\n                    curQuesNo: {\r\n                        logical: prevState.curQuesNo.logical,\r\n                        aptitude: curQuesNo,\r\n                        reasoning: prevState.curQuesNo.reasoning\r\n                    }\r\n                }\r\n            })\r\n        } else if (this.state.activeTab === \"reasoning\") {\r\n            this.setState((prevState) => {\r\n                return {\r\n                    curQuesNo: {\r\n                        logical: prevState.curQuesNo.logical,\r\n                        aptitude: prevState.curQuesNo.aptitude,\r\n                        reasoning: curQuesNo\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        this.handleAnswerStatus(qID);\r\n    }\r\n    handleAnswerStatus = (qID) => {\r\n        const obj = { ...this.state.answerStatus };\r\n        if (!(obj[qID] && obj[qID].answered)) {\r\n            obj[qID] = \"unattempted\";\r\n        }\r\n        this.setState({ answerStatus: obj });\r\n    }\r\n    handleRadioClick = (e) => {\r\n        const obj = { ...this.state.answerStatus };\r\n        obj[e.target.name] = {\r\n            answered: e.target.value\r\n        }\r\n        this.setState({ answerStatus: obj });\r\n    }\r\n    handleSubmit = (timeUp) => {\r\n        const payload = this.state.answerStatus\r\n        console.log(payload);\r\n        let result = false;\r\n        if(timeUp !== true) {\r\n            result = window.confirm(\"Are you sure! Once Submitted you can not go back.\");\r\n        }\r\n        if (result || (timeUp === true)) {\r\n            // post payload in real server\r\n            // clear local storage\r\n            localStorage.removeItem(\"localState\");\r\n            this.setState({ timeUp: true });\r\n            localStorage.removeItem(\"timeLeftMs\");\r\n            // Close the application\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        const localStorageData = JSON.parse(localStorage.getItem(\"localState\"));\r\n        if (localStorageData) {\r\n            this.setState({\r\n                data: localStorageData.data,\r\n                activeTab: localStorageData.activeTab,\r\n                curQuesNo: localStorageData.curQuesNo,\r\n                answerStatus: localStorageData.answerStatus\r\n            });\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if(!this.state.timeUp) {\r\n            localStorage.setItem(\"localState\", JSON.stringify(this.state));\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <Row className=\"layout\">\r\n                        <Col lg=\"9\" className=\"left-panel\">\r\n                            <LeftPanel onSubmitClick={this.handleSubmit} />\r\n                        </Col>\r\n                        <Col lg=\"3\" className=\"right-panel\">\r\n                            <RightPanel\r\n                                handleSubmit={this.handleSubmit}\r\n                                timeUp={this.state.timeUp} />\r\n                        </Col>\r\n                    </Row>\r\n                    <QuestionView\r\n                        handleTabclick={this.handleTabclick}\r\n                        setCurQuesNo={this.setCurQuesNo}\r\n                        handleRadioClick={this.handleRadioClick}\r\n                        handleAnswerStatus={this.handleAnswerStatus}\r\n                        activeTab={this.state.activeTab}\r\n                        curQuesNo={this.state.curQuesNo}\r\n                        answerStatus={this.state.answerStatus}\r\n                        data={this.state.data}\r\n                    />\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport Layout from './components/Layout/Layout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}