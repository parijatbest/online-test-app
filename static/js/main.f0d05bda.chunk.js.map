{"version":3,"sources":["components/QuestionView/NavBar/NavBar.js","components/QuestionView/QuestionNavigation/QuestionNavigation.js","components/QuestionView/QBadge/QBadge.js","components/QuestionView/QuestionMap/QuestionMap.js","components/QuestionView/Options/Options.js","components/QuestionView/Question/Question.js","data/SampleData.js","components/QuestionView/QuestionView.js","components/LeftPanel/LeftPanel.js","components/LoginStatus/LoginStatus.js","components/Counter/Counter.js","components/RightPanel/RightPanel.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","Nav","variant","defaultActiveKey","this","props","activeTab","Item","Link","eventKey","onSelect","href","className","Component","QuestionNavigation","_this$props","setCurQuesNo","curQuesNo","totalQues","qID","Button","onClick","disabled","QBadge","activeTabData","answerStatus","onBadgeClick","e","preventDefault","parseInt","target","getAttribute","id","questions","map","qObj","ind","badgeClass","key","index","answered","checkBadge","data-qno","concat","QuestionMap","handleAnswerStatus","QuestionView_QBadge_QBadge","Options","ansOptions","onRadioClick","Form","optObj","Check","custom","type","name","aID","label","aDesc","value","Question","data","qNo","_this$props2","length","qDesc","QuestionView_Options_Options","QuestionView_QuestionNavigation_QuestionNavigation","QuestionView_QuestionMap_QuestionMap","TestData","logical","aptitude","reasoning","QuestionView","state","handleTabclick","_this","setState","prevState","obj","Object","objectSpread","handleRadioClick","QuestionView_NavBar_NavBar","QuestionView_Question_Question","LeftPanel","LoginStatus","Counter","RightPanel","Fragment","components_LoginStatus_LoginStatus","components_Counter_Counter","Layout","Container","Row","Col","lg","components_LeftPanel_LeftPanel","components_RightPanel_RightPanel","components_QuestionView_QuestionView","App","components_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0d05bda.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <Nav variant=\"pills\" defaultActiveKey={this.props.activeTab}>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"logical\" onSelect={this.props.onSelect}>LOGICAL SECTION</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"aptitude\" onSelect={this.props.onSelect}>APTITUDE SECTION</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"reasoning\" onSelect={this.props.onSelect}>REASONING SECTION</Nav.Link>\r\n                </Nav.Item>\r\n                <a href=\"javasript:void(0);\" className=\"help-text\">Need Help?</a>\r\n            </Nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass QuestionNavigation extends Component {\r\n    render() {\r\n        const {setCurQuesNo, curQuesNo, totalQues, qID} = this.props;\r\n        return (\r\n            <div className=\"question-nav\">\r\n                <Button \r\n                    variant=\"primary\" \r\n                    className=\"prev-question\"\r\n                    onClick={() => setCurQuesNo(curQuesNo - 1, qID)}\r\n                    disabled={curQuesNo === 1}>Previous Question</Button>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    className=\"next-question\" \r\n                    onClick={() => setCurQuesNo(curQuesNo+1, qID)}\r\n                    disabled={curQuesNo === totalQues}>Next Question</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionNavigation;","import React, { Component } from 'react';\r\n\r\nclass QBadge extends Component {\r\n    render() {\r\n        const { activeTabData, setCurQuesNo, answerStatus, curQuesNo } = this.props;\r\n        const onBadgeClick = (e) => {\r\n            e.preventDefault();\r\n            setCurQuesNo(parseInt(e.target.getAttribute(\"data-qno\")), e.target.id);\r\n        }\r\n        const checkBadge = (key, index) => {\r\n            let badgeClass = \"\";\r\n            if(answerStatus && answerStatus[key]) {\r\n                badgeClass = \"badge-unanswered\";\r\n                if(answerStatus[key].answered) {\r\n                    badgeClass = \"badge-answered\";\r\n                }\r\n            }\r\n            if(curQuesNo == index + 1) {\r\n                badgeClass += \" badge-current\";\r\n            }\r\n            return badgeClass;\r\n        }\r\n        const qBadges = activeTabData.questions.map((qObj, ind) => {\r\n            const badgeClass = checkBadge(qObj.qID, ind);\r\n            return <a\r\n                data-qno={ind + 1}\r\n                id={qObj.qID}\r\n                href=\"#\"\r\n                className={`badge badge-pill ${badgeClass}`}\r\n                onClick={onBadgeClick}\r\n                key={qObj.qID}>\r\n                {ind + 1}\r\n            </a>\r\n        })\r\n    \r\n        return qBadges;\r\n    }\r\n}\r\nexport default QBadge;","import React, { Component } from 'react';\r\nimport QBadge from './../QBadge/QBadge';\r\n\r\nclass QuestionMap extends Component {\r\n    render() {\r\n        const { setCurQuesNo, curQuesNo, activeTab, activeTabData, answerStatus, handleAnswerStatus } = this.props;\r\n\r\n        return (\r\n            <div className=\"question-map\">\r\n                <h3 className=\"qmap-heading\">Questions in {activeTab} section</h3>\r\n                <div className=\"qmap-badge\">\r\n                    <QBadge\r\n                        answerStatus={answerStatus}\r\n                        activeTabData={activeTabData}\r\n                        curQuesNo={curQuesNo}\r\n                        setCurQuesNo={setCurQuesNo} />\r\n                </div>\r\n                <div className=\"qmap-legend\">\r\n                    <div className=\"legend answered\">Answered</div>\r\n                    <div className=\"legend unanswered\">Unanswered</div>\r\n                    <div className=\"legend current\">Current question</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionMap;","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass Options extends Component {\r\n    render() {\r\n        const {ansOptions, qID, onRadioClick} = this.props;\r\n\r\n        return (\r\n            <Form>\r\n                {ansOptions.map((optObj) => {\r\n                    return (<Form.Check\r\n                        custom\r\n                        type=\"radio\"\r\n                        name={qID}\r\n                        id={optObj.aID}\r\n                        key={optObj.aID}\r\n                        label={optObj.aDesc}\r\n                        value={optObj.aID}\r\n                        onClick={onRadioClick}\r\n                    />)\r\n                })}\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;","import React, { Component } from 'react';\r\nimport QuestionNavigation from '../QuestionNavigation/QuestionNavigation';\r\nimport QuestionMap from './../QuestionMap/QuestionMap';\r\nimport Options from './../Options/Options';\r\n\r\nclass Question extends Component {\r\n    componentDidMount() {\r\n        const { activeTab, data, curQuesNo, handleAnswerStatus } = this.props;\r\n        const qNo = curQuesNo[activeTab];\r\n        const qId = data[activeTab].questions[qNo - 1].qID;\r\n        handleAnswerStatus(qId);\r\n    }\r\n    render() {\r\n        const { activeTab, data, setCurQuesNo, curQuesNo, answerStatus, onRadioClick } = this.props;\r\n        const qNo = curQuesNo[activeTab];\r\n        const totalQues = data[activeTab].questions.length;\r\n        return (\r\n            <div className=\"question\">\r\n                <h2 className=\"question-heading\">Question {qNo}</h2>\r\n                <div className=\"question-box\">\r\n                    <div className=\"question-desc\">\r\n                        {data[activeTab].questions[qNo - 1].qDesc}\r\n                    </div>\r\n                    <div className=\"question-opt\">\r\n                        <Options\r\n                            onRadioClick={onRadioClick}\r\n                            qID={data[activeTab].questions[qNo - 1].qID}\r\n                            ansOptions={data[activeTab].questions[qNo - 1].ansOptions} />\r\n                    </div>\r\n                    <QuestionNavigation\r\n                        qID={data[activeTab].questions[qNo - 1].qID}\r\n                        totalQues={totalQues}\r\n                        curQuesNo={qNo}\r\n                        setCurQuesNo={setCurQuesNo} />\r\n                </div>\r\n                <QuestionMap\r\n                    answerStatus={answerStatus}\r\n                    activeTabData={data[activeTab]}\r\n                    activeTab={activeTab}\r\n                    totalQues={totalQues}\r\n                    curQuesNo={qNo}\r\n                    setCurQuesNo={setCurQuesNo} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Question;","const TestData = {\r\n    logical: {\r\n        questions: [\r\n            {\r\n                qID: \"logicalQ1\",\r\n                qDesc: \"How to answer a logical question 1 in this application?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ1Opt1\",\r\n                        aDesc: \"Sample logical Q1 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ1Opt2\",\r\n                        aDesc: \"Sample logical Q1 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ1Opt3\",\r\n                        aDesc: \"Sample logical Q1 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ1Opt4\",\r\n                        aDesc: \"Sample logical Q1 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"logicalQ2\",\r\n                qDesc: \"How to answer a logical question 2 in this application2?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ2Opt1\",\r\n                        aDesc: \"Sample logical Q2 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ2Opt2\",\r\n                        aDesc: \"Sample logical Q2 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ2Opt3\",\r\n                        aDesc: \"Sample logical Q2 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ2Opt4\",\r\n                        aDesc: \"Sample logical Q2 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"logicalQ3\",\r\n                qDesc: \"How to answer a logical question 3 in this application3?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ3Opt1\",\r\n                        aDesc: \"Sample logical Q3 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ3Opt2\",\r\n                        aDesc: \"Sample logical Q3 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ3Opt3\",\r\n                        aDesc: \"Sample logical Q3 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ3Opt4\",\r\n                        aDesc: \"Sample logical Q3 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"logicalQ4\",\r\n                qDesc: \"How to answer a logical question 4 in this application4?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"logicalQ4Opt1\",\r\n                        aDesc: \"Sample logical Q4 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ4Opt2\",\r\n                        aDesc: \"Sample logical Q4 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ4Opt3\",\r\n                        aDesc: \"Sample logical Q4 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"logicalQ4Opt4\",\r\n                        aDesc: \"Sample logical Q4 answer 4\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    aptitude: {\r\n        questions: [\r\n            {\r\n                qID: \"aptitudeQ1\",\r\n                qDesc: \"How to answer a aptitude question 1 in this application?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"aptitudeQ1Opt1\",\r\n                        aDesc: \"Sample aptitude Q1 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ1Opt2\",\r\n                        aDesc: \"Sample aptitude Q1 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ1Opt3\",\r\n                        aDesc: \"Sample aptitude Q1 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ1Opt4\",\r\n                        aDesc: \"Sample aptitude Q1 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"aptitudeQ2\",\r\n                qDesc: \"How to answer a aptitude question 2 in this application2?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"aptitudeQ2Opt1\",\r\n                        aDesc: \"Sample aptitude Q2 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ2Opt2\",\r\n                        aDesc: \"Sample aptitude Q2 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ2Opt3\",\r\n                        aDesc: \"Sample aptitude Q2 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ2Opt4\",\r\n                        aDesc: \"Sample aptitude Q2 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"aptitudeQ3\",\r\n                qDesc: \"How to answer a aptitude question 3 in this application3?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"aptitudeQ3Opt1\",\r\n                        aDesc: \"Sample aptitude Q3 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ3Opt2\",\r\n                        aDesc: \"Sample aptitude Q3 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ3Opt3\",\r\n                        aDesc: \"Sample aptitude Q3 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"aptitudeQ3Opt4\",\r\n                        aDesc: \"Sample aptitude Q3 answer 4\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    reasoning: {\r\n        questions: [\r\n            {\r\n                qID: \"reasoniongQ1\",\r\n                qDesc: \"How to answer a reasoniong question 1 in this application?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"reasoniongQ1Opt1\",\r\n                        aDesc: \"Sample reasoniong Q1 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ1Opt2\",\r\n                        aDesc: \"Sample reasoniong Q1 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ1Opt3\",\r\n                        aDesc: \"Sample reasoniong Q1 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ1Opt4\",\r\n                        aDesc: \"Sample reasoniong Q1 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"reasoniongQ2\",\r\n                qDesc: \"How to answer a reasoniong question 2 in this application2?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"reasoniongQ2Opt1\",\r\n                        aDesc: \"Sample reasoniong Q2 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ2Opt2\",\r\n                        aDesc: \"Sample reasoniong Q2 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ2Opt3\",\r\n                        aDesc: \"Sample reasoniong Q2 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ2Opt4\",\r\n                        aDesc: \"Sample reasoniong Q2 answer 4\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                qID: \"reasoniongQ3\",\r\n                qDesc: \"How to answer a reasoniong question 3 in this application3?\",\r\n                ansOptions: [\r\n                    {\r\n                        aID: \"reasoniongQ3Opt1\",\r\n                        aDesc: \"Sample reasoniong Q3 answer 1\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ3Opt2\",\r\n                        aDesc: \"Sample reasoniong Q3 answer 2\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ3Opt3\",\r\n                        aDesc: \"Sample reasoniong Q3 answer 3\"\r\n                    },\r\n                    {\r\n                        aID: \"reasoniongQ3Opt4\",\r\n                        aDesc: \"Sample reasoniong Q3 answer 4\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nexport default TestData;","import React, { Component } from 'react';\r\nimport NavBar from './NavBar/NavBar';\r\nimport Question from './Question/Question';\r\nimport TestData from '../../data/SampleData';\r\n\r\nclass QuestionView extends Component {\r\n    state = {\r\n        data: TestData,\r\n        activeTab: \"logical\",\r\n        curQuesNo: {\r\n            logical: 1,\r\n            aptitude: 1,\r\n            reasoning: 1\r\n        },\r\n        answerStatus: {}\r\n    }\r\n    handleTabclick = (eventKey) => {\r\n        this.setState({ activeTab: eventKey });\r\n    }\r\n    setCurQuesNo = (curQuesNo, qID) => {\r\n        if (this.state.activeTab === \"logical\") {\r\n            this.setState((prevState) => {\r\n                return { \r\n                    curQuesNo: { \r\n                        logical: curQuesNo,\r\n                        aptitude: prevState.curQuesNo.aptitude,\r\n                        reasoning: prevState.curQuesNo.reasoning\r\n                    } \r\n                }\r\n            })\r\n        } else if (this.state.activeTab === \"aptitude\") {\r\n            this.setState((prevState) => {\r\n                return { \r\n                    curQuesNo: { \r\n                        logical: prevState.curQuesNo.logical,\r\n                        aptitude: curQuesNo,\r\n                        reasoning: prevState.curQuesNo.reasoning\r\n                    } \r\n                }\r\n            })\r\n        } else if (this.state.activeTab === \"reasoning\") {\r\n            this.setState((prevState) => {\r\n                return { \r\n                    curQuesNo: { \r\n                        logical: prevState.curQuesNo.logical,\r\n                        aptitude: prevState.curQuesNo.aptitude,\r\n                        reasoning: curQuesNo\r\n                    } \r\n                }\r\n            })\r\n        }\r\n        this.handleAnswerStatus(qID);\r\n    }\r\n    handleAnswerStatus = (qID) => {\r\n        const obj = {...this.state.answerStatus};\r\n        if(!(obj[qID] && obj[qID].answered)) {\r\n            obj[qID] = \"unattempted\";\r\n        }\r\n        this.setState({ answerStatus: obj });\r\n    }\r\n    handleRadioClick = (e) => {\r\n        const obj = {...this.state.answerStatus};\r\n        obj[e.target.name] = {\r\n            answered: e.target.value\r\n        }\r\n        this.setState({ answerStatus: obj });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"question-view\">\r\n                <NavBar\r\n                    onSelect={this.handleTabclick}\r\n                    activeTab={this.state.activeTab} />\r\n                <Question\r\n                    setCurQuesNo={this.setCurQuesNo}\r\n                    handleAnswerStatus={this.handleAnswerStatus}\r\n                    curQuesNo={this.state.curQuesNo}\r\n                    activeTab={this.state.activeTab}\r\n                    answerStatus={this.state.answerStatus}\r\n                    onRadioClick={this.handleRadioClick}\r\n                    data={this.state.data} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionView;","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass LeftPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button type=\"submit\" variant=\"primary\" className=\"submit-test\">SUBMIT TEST</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftPanel;","import React, { Component } from 'react';\r\n\r\nclass LoginStatus extends Component {\r\n    render() {\r\n        const isLoggedIn = true;// Will be evaluated from login service in actual implementation\r\n        return (\r\n            !isLoggedIn ? null : (\r\n                <div className=\"login-status\">\r\n                    <p className=\"login-status-msg\">LOGGED IN AS</p>\r\n                    <p className=\"login-status-id\">10STUHHCS0011</p>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginStatus;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"counter\">\r\n                <p className=\"counter-text\">TIME LEFT</p>\r\n                <p className=\"counter-time\">01:10:12</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react';\r\nimport LoginStatus from '../LoginStatus/LoginStatus';\r\nimport Counter from '../Counter/Counter';\r\n\r\nclass RightPanel extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <LoginStatus />\r\n                <Counter />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RightPanel;","import React, { Component } from 'react';\r\nimport QuestionView from '../QuestionView/QuestionView';\r\nimport LeftPanel from './../LeftPanel/LeftPanel';\r\nimport RightPanel from './../RightPanel/RightPanel';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <Row className=\"layout\">\r\n                        <Col lg=\"9\" className=\"left-panel\">\r\n                            <LeftPanel />\r\n                        </Col>\r\n                        <Col lg=\"3\" className=\"right-panel\">\r\n                            <RightPanel />\r\n                        </Col>\r\n                    </Row>\r\n                    <QuestionView />\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport Layout from './components/Layout/Layout'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}